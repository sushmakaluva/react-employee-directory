{"version":3,"sources":["Components/Header.js","Components/Table.js","Components/SearchBar.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","padding","Table","props","employees","width","cursor","onClick","bind","this","map","employee","key","name","first","last","src","picture","medium","alt","phone","email","dob","date","split","SearchBar","margin","id","onChange","type","value","searchInput","placeholder","aria-label","axios","defaults","headers","post","get","App","state","isLoading","filteredEmployees","sortOrder","error","e","searchFunction","target","setState","sortKey","sortFunction","result","console","log","sort","a","b","localeCompare","searchKeyword","trim","toLowerCase","filtered","filter","includes","API","then","response","data","results","sortedEmployees","backgroundColor","onSubmit","pointerSymbol","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fc37a508.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction Header() {\n    return (\n        <header className=\"Header\" style={{padding: 10}}>\n            <h1>Employee Directory</h1>\n            <p>Click on carrots to filter by heading or use the search box to narrow your results.</p>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\n\nfunction Table(props) {\n    const { employees } = props;\n    // console.log(\"Employee List\", employees);\n    return (\n        <div className=\"datatable\">\n            <table\n                className={`table table-bordered table-striped table-hover table-condensed`}\n                style={{\n                    padding: 25,\n                }} >\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th style={{ width: '10%' }}>Image <span style={{ cursor: \"pointer\" }} onClick={props.onClick.bind(this, 'image')} className=\"pointer\"></span></th>\n                        <th style={{ width: '10%' }}>Name <span style={{ cursor: \"pointer\" }} onClick={props.onClick.bind(this, 'name')} className=\"pointer\">&#9660;</span></th>\n                        <th style={{ width: '20%' }}>Phone <span style={{ cursor: \"pointer\" }} onClick={props.onClick.bind(this, 'phone')} className=\"pointer\">&#9660;</span></th>\n                        <th style={{ width: '20%' }}>Email <span style={{ cursor: \"pointer\" }} onClick={props.onClick.bind(this, 'email')} className=\"pointer\">&#9660;</span></th>\n                        <th style={{ width: '10%' }}>DOB <span style={{ cursor: \"pointer\" }} onClick={props.onClick.bind(this, 'dob')} className=\"pointer\">&#9660;</span></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        employees.map((employee) => {\n                            return (\n                                <tr key={employee.name.first + \"-\" + employee.name.last}>\n                                    <td >{\n                                        <img\n                                            src={employee.picture.medium}\n                                            alt={\"profile image for \" + employee.name.first + \" \" + employee.name.last}\n                                            className=\"img-responsive\"\n                                        />\n                                    }\n                                    </td>\n                                    <td>{employee.name.first} {employee.name.last}</td>\n                                    <td>{employee.phone}</td>\n                                    <td>{employee.email}</td>\n                                    <td>{(employee.dob.date).split('T')[0]}</td>\n                                </tr>\n                            );\n                        })\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n\nexport default Table;\n\n\n\n\n\n","import React from 'react';\n\nfunction SearchBar(props) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{ margin: 20 }} >\n            <div className=\"collapse navbar-collapse row\" id=\"navbarNav\">\n                <form className=\"search-area col-4\">\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend mt-5\">\n                            <span className=\"input-group-text\" id=\"\">Search  </span>\n                            <input onChange={props.onChange} className=\"form-control\" type=\"search\" value={props.searchInput} name=\"searchInput\" placeholder=\"name\" aria-label=\"name\" />\n\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </nav>\n    );\n\n\n}\n\nexport default SearchBar;","import axios from \"axios\";\n\nexport default {\n    usersList: function () {\n        axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n        axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n        return axios.get(\"https://randomuser.me/api/?results=50\");\n    },\n\n    filteredUsers:function (searchInput) {\n        axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n        axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n        return axios.get(`https://randomuser.me/api/?name.first=${searchInput}`);\n    }\n\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Table from './Components/Table';\nimport SearchBar from './Components/SearchBar'\nimport API from './utils/API';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    employees: [],\n    filteredEmployees: [],\n    sortOrder: \"descending\",\n    error: null,\n    searchInput: '',\n  };\n\n  componentDidMount() {\n    API.usersList()\n      .then(response => {\n        this.setState({\n          employees: response.data.results,\n          filteredEmployees: response.data.results,\n          sortedEmployees: response.data.results,\n        })\n      })\n  };\n\n  onChange = (e) => {\n    this.searchFunction(e.target.value);\n    this.setState({ searchInput: e.target.value })\n  }\n\n  onClick = (e, sortKey) => {\n    this.sortFunction(e, sortKey);\n  }\n\n  sortFunction = (sortKey) => {\n    console.log(\"passed sortKey is\", sortKey);\n    let result;\n    if (this.state.sortOrder === \"descending\") {\n      switch (sortKey) {\n        case 'name':\n          result = this.state.employees.sort(function (a, b) { return ('' + a.name.first).localeCompare(b.name.first); });\n          break;\n        case 'phone':\n          result = this.state.employees.sort(function (a, b) { return ('' + a.phone).localeCompare(b.phone); });\n          break;\n        case 'email':\n          result = this.state.employees.sort(function (a, b) { return ('' + a.email).localeCompare(b.email); });\n          break;\n        case 'dob':\n          result = this.state.employees.sort(function (a, b) { return ('' + a.dob.date).localeCompare(b.dob.date); });\n          break;\n        default:\n          return;\n      }\n      this.setState({\n        filteredEmployees: result,\n        sortOrder: \"ascending\"\n      })\n    }\n    else if (this.state.sortOrder === \"ascending\") {\n      switch (sortKey) {\n        case 'name':\n          result = this.state.employees.sort(function (a, b) { return ('' + b.name.first).localeCompare(a.name.first); });\n          break;\n        case 'phone':\n          result = this.state.employees.sort(function (a, b) { return ('' + b.phone).localeCompare(a.phone); });\n          break;\n        case 'email':\n          result = this.state.employees.sort(function (a, b) { return ('' + b.email).localeCompare(a.email); });\n          break;\n        case 'dob':\n          result = this.state.employees.sort(function (a, b) { return ('' + b.dob.date).localeCompare(a.dob.date); });\n          break;\n        default:\n          return;\n      }\n      this.setState({\n        filteredEmployees: result,\n        sortOrder: \"descending\"\n      })\n    }\n\n\n  }\n\n  searchFunction = (searchInput) => {\n    const searchKeyword = searchInput.trim().toLowerCase();\n    if (searchKeyword) {\n      const filtered = this.state.employees.filter(employee => {\n        return (((employee.name.first.toLowerCase()).includes(searchKeyword)) ||\n          ((employee.name.last.toLowerCase()).includes(searchKeyword)));\n      })\n      this.setState({\n        filteredEmployees: filtered\n      })\n    }\n    else {\n      this.setState({\n        filteredEmployees: this.state.employees\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ backgroundColor: \"#f4ffab\" }}>\n        <Header />\n        <SearchBar\n          searchInput={this.state.searchInput}\n          onSubmit={this.onSubmit}\n          onChange={this.onChange}\n          searchFunction={this.searchFunction} />\n        <Table\n          employees={this.state.filteredEmployees}\n          onClick={this.onClick}\n          pointerSymbol={this.state.pointerSymbol}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}